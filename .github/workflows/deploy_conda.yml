name: Conda Deployment
on:
  push:
    branches: [master]
    tags: ['v*']
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Install deps on macos
      if: contains( matrix.os, 'macos')
      run: brew install coreutils || true

    - name: Install macOS SDK
      if: contains( matrix.os, 'macos')
      run: |
	    curl -fsSL https://github.com/phracker/MacOSX-SDKs/releases/download/10.15/MacOSX10.9.sdk.tar.xz > ~/MacOSX10.9.sdk.tar.xz
	    tar -xzf ~/MacOSX10.9.sdk.tar.xz
	    rm ~/MacOSX10.9.sdk.tar.xz
	
	- name: Download and verify miniconda (macOS)
      if: contains( matrix.os, 'macos')
	  working-directory: ${{ env.HOME }}
      env:
        MINICONDA: Miniconda3-latest-MacOSX-x86_64.sh
      run: |
	    md5sum () { command md5 -r "$@"; }
        MINICONDA_MD5=$(curl -s https://repo.anaconda.com/miniconda/ | grep -A3 $MINICONDA | sed -n '4p' | sed -n 's/ *<td>\(.*\)<\/td> */\1/p')
        curl -fsSL https://repo.anaconda.com/miniconda/$MINICONDA > miniconda.sh
        if [[ $MINICONDA_MD5 != $(md5sum miniconda.sh | cut -d ' ' -f 1) ]]; then
        	echo "Miniconda MD5 mismatch"
        	exit 1
        fi

	- name: Download and verify miniconda (Linux)
      if: contains( matrix.os, 'ubuntu')
	  working-directory: ${{ env.HOME }}
      env:
        MINICONDA: Miniconda3-latest-Linux-x86_64.sh
      run: |
        MINICONDA_MD5=$(curl -s https://repo.anaconda.com/miniconda/ | grep -A3 $MINICONDA | sed -n '4p' | sed -n 's/ *<td>\(.*\)<\/td> */\1/p')
        curl -fsSL https://repo.anaconda.com/miniconda/$MINICONDA > miniconda.sh
        if [[ $MINICONDA_MD5 != $(md5sum miniconda.sh | cut -d ' ' -f 1) ]]; then
        	echo "Miniconda MD5 mismatch"
        	exit 1
        fi

    - name: Install miniconda
      run: |
        bash miniconda.sh -b -p "$HOME/miniconda"
        rm miniconda.sh

    - name: Setup Conda and adccore checkout
      env:
        OS_NAME: ${{ matrix.os }}
      run: |
        bash ci/setup_conda.sh
    - name: Build and Deploy
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      run: |
        source $HOME/miniconda/bin/activate
        bash scripts/upload_to_anaconda.sh

